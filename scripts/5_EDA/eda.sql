/*
================================================================================================
This script performs all Exploratory Data Analaysis Techniques to understand the data.
================================================================================================
*/

use DataWarehouse;

-- Data Base Explorations
-- Explore all objects in the Datawarehouse
SELECT * FROM INFORMATION_SCHEMA.TABLES ;

-- Explore columns of required tables

SELECT * FROM INFORMATION_SCHEMA.COLUMNS
WHERE TABLE_NAME = 'dim_customers';

SELECT * FROM INFORMATION_SCHEMA.COLUMNS
WHERE TABLE_NAME = 'dim_products';

SELECT * FROM INFORMATION_SCHEMA.COLUMNS
WHERE TABLE_NAME = 'fact_sales';

-- Dimensions Explorations
-- Explore all countries our customers comes from
SELECT DISTINCT country FROM gold.dim_customers;

-- Explore all products details
SELECT DISTINCT category, subcategory, product_name FROM gold.dim_products
ORDER BY 1,2,3 ;

-- Date Exploration
-- Find the date of first order and last order
-- how many months of sales are available 
SELECT
	MIN(order_date) AS first_order_date,
	MAX(order_date) AS last_order_date,
	DATEDIFF(month, MIN(order_date), MAX(order_date)) AS total_no_of_months
FROM gold.fact_sales;

-- Find the oldest and youngest customer and their age
SELECT
	MIN(birth_date) AS oldest_customer,
	DATEDIFF(year, MIN(birth_date), GETDATE()) AS oldest_age,
	MAX(birth_date) AS youngest_age,
	DATEDIFF(year, MAX(birth_date), GETDATE()) AS youngest_age
FROM gold.dim_customers ;

-- Measures Explorations
-- Find the total sales
-- Find how many items are sold
-- Find the average selling price
-- Find total number of orders

SELECT
	SUM(sales_amount) AS total_sales,
	SUM(quantity) AS total_no_of_items_sold,
	AVG(price) AS average_selling_price,
	COUNT(DISTINCT order_number) AS total_no_of_orders
FROM gold.fact_sales ;

-- Find total number of products
SELECT COUNT(DISTINCT product_id) AS total_no_of_products FROM gold.dim_products;

-- Find total number of customers
SELECT COUNT(DISTINCT customer_id) AS total_no_of_products FROM gold.dim_customers;

-- Find total number of customers that has placed an order
SELECT COUNT(DISTINCT customer_key) AS no_of_customers_paced_order FROM gold.fact_sales;

-- Generate a report to show the key metrics of the business
SELECT 'Total_sales' AS measure_name, SUM(sales_amount) AS measure_value from gold.fact_sales
UNION ALL
SELECT	'Total_quantity', SUM(quantity) FROM gold.fact_sales
UNION ALL
SELECT	'Average_price', AVG(price) FROM gold.fact_sales
UNION ALL
SELECT	'Total_no_of_orders', COUNT(DISTINCT order_number) FROM gold.fact_sales
UNION ALL
SELECT	'Total_producst', COUNT(DISTINCT product_id) FROM gold.dim_products
UNION ALL
SELECT	'Total_customers', COUNT(DISTINCT customer_id) FROM gold.dim_customers
UNION ALL
SELECT	'Total_customers_orders', COUNT(DISTINCT customer_key) FROM gold.fact_sales ;

-- Magnitude analysis

-- Total customers by countries
SELECT
	country,
	COUNT(*) AS total_customers
FROM gold.dim_customers
GROUP BY country
ORDER BY total_customers DESC;

-- Total customers by gender
SELECT
	gender,
	COUNT(*) AS total_customers
FROM gold.dim_customers
GROUP BY gender
ORDER BY total_customers DESC;

-- Total products by category
-- what is the average cost in each caategory ?
SELECT
	category,
	COUNT(*) AS total_products,
	AVG(cost) AS average_cost
FROM gold.dim_products
GROUP BY category
ORDER BY total_products DESC, average_cost DESC;

-- What is the total revenue generated for each category?
SELECT
	dp.category AS category,
	SUM(fs.sales_amount) AS total_revenue
FROM gold.fact_sales AS fs
LEFT JOIN gold.dim_products AS dp
ON dp.product_key = fs.product_key
GROUP BY dp.category
ORDER BY total_revenue DESC;

-- Find the total revenue generated by each customer?
SELECT
	dc.customer_id AS customer_id,
	SUM(fs.sales_amount) AS total_revenue
FROM gold.fact_sales AS fs
LEFT JOIN gold.dim_customers AS dc
ON dc.customer_key = fs.customer_key
GROUP BY dc.customer_id
ORDER BY total_revenue DESC;

-- What is the distribution of sold items across different countries?
SELECT
	dc.country AS country,
	SUM(fs.quantity) AS total_sold_items
FROM gold.fact_sales AS fs
LEFT JOIN gold.dim_customers AS dc
ON dc.customer_key = fs.customer_key
GROUP BY dc.country
ORDER BY total_sold_items DESC;

-- Ranking Analysis
-- Whic five products generate the heighest reveue
SELECT TOP 5
	dp.product_name AS best_product_name,
	SUM(sales_amount) AS revenue
FROM gold.fact_sales AS fs
LEFT JOIN gold.dim_products AS dp
ON dp.product_key = fs.product_key
GROUP BY dp.product_name
ORDER BY revenue DESC ;

-- what are the 5 wors-performing producsts in terms of sales
SELECT TOP 5
	dp.product_name AS worst_product_name,
	SUM(sales_amount) AS revenue
FROM gold.fact_sales AS fs
LEFT JOIN gold.dim_products AS dp
ON dp.product_key = fs.product_key
GROUP BY dp.product_name
ORDER BY revenue ASC;	